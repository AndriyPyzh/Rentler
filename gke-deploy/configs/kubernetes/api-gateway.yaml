apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - image: gcr.io/rentler-370619/rentler_api-gateway
          imagePullPolicy: Always
          name: api-gateway
          envFrom:
            - configMapRef:
                name: api-gateway
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  labels:
    app: api-gateway
  name: api-gateway
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - port: 8765
      protocol: TCP
      targetPort: 8765
  selector:
    app: api-gateway
  sessionAffinity: None
  type: LoadBalancer
  loadBalancerIP: 34.0.240.189
---
apiVersion: v1
data:
  spring.application.name: 'api-gateway'
  server.port: '8765'

  spring.cloud.gateway.discovery.locator.enabled: 'true'
  spring.cloud.gateway.discovery.locator.lowerCaseServiceId: 'true'

  spring.sleuth.sampler.probability: '1.0'

  apartment.service.url: 'http://apartment-service:8200'
  account.service.url: 'http://account-service:8100'
  auth.service.url: 'http://auth-service:5000'

  # disable registry and config
  spring.cloud.config.enabled: 'false'
  spring.cloud.service-registry.auto-registration.enabled: 'false'
  eureka.client.enabled: 'false'
  eureka.client.serviceUrl.registerWithEureka: 'false'
  spring.zipkin.enabled: 'false'

kind: ConfigMap
metadata:
  name: api-gateway
  namespace: default